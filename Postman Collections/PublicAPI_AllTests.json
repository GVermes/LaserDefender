{
	"info": {
		"_postman_id": "5ed1d515-66e8-47b0-8d09-998922449d87",
		"name": "PublicAPI_AllTests",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "0 - Generate Variables",
			"item": [
				{
					"name": "Generate Agency Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cache-Control is private\", () => {",
									"    pm.response.to.be.header('Cache-Control', 'private');",
									"});",
									"",
									"pm.test(\"X-RateLimit headers are present\", () => {",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"TokenType should be bearer\", () => {",
									"    pm.expect(responseJson.token_type).to.eql(\"bearer\");",
									"});",
									"",
									"pm.test(\"Access and RefreshToken Token should be present in the response\", () => {",
									"    pm.expect(responseJson.AccessToken).not.to.be.null || pm.expect(responseJson.AccessToken).not.to.be.undefined;",
									"    pm.expect(responseJson.RefreshToken).not.to.be.null || pm.expect(responseJson.RefreshToken).not.to.be.undefined;",
									"});",
									"",
									"pm.environment.set(\"Generated_AccessToken\", responseJson.access_token);",
									"pm.environment.set(\"Generated_RefreshToken\", responseJson.refresh_token);",
									""
								],
								"type": "text/javascript",
								"id": "1247a9d3-e765-458f-b331-ddb0e393d16a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"//the below Generated variables will be used in the collection more than once\r",
									"var moment = require('moment');\r",
									"pm.environment.set(\"Generated_StartDate\", moment().format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"Generated_EndDate\", moment().add(30, 'days').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"Generated_StartOfTheCurrentYear\", moment().startOf('year').format(\"YYYY-MM-DD\"));\r",
									"pm.environment.set(\"Generated_AgreementEndDate\", moment().add(50, 'days').format(\"YYYY-MM-DD\"));"
								],
								"type": "text/javascript",
								"id": "58c4755c-48d7-4d9f-af6f-0d262cea6cf1"
							}
						}
					],
					"id": "a2be0665-7d76-4dc2-849c-ac89c64d7ab4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "{{Encoded_ClientKey_ClientSecret}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{SymAgency_Login_Username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{SymAgency_Login_Password}}",
									"type": "text"
								}
							]
						},
						"url": "{{IdentityServerUrl}}/token/"
					},
					"response": []
				},
				{
					"name": "Generate Publisher Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Cache-Control is private\", () => {",
									"    pm.response.to.be.header('Cache-Control', 'private');",
									"});",
									"",
									"pm.test(\"X-RateLimit headers are present\", () => {",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"TokenType should be bearer\", () => {",
									"    pm.expect(responseJson.token_type).to.eql(\"bearer\");",
									"});",
									"",
									"pm.test(\"Access and RefreshToken Token should be present in the response\", () => {",
									"    pm.expect(responseJson.AccessToken).not.to.be.null || pm.expect(responseJson.AccessToken).not.to.be.undefined;",
									"    pm.expect(responseJson.RefreshToken).not.to.be.null || pm.expect(responseJson.RefreshToken).not.to.be.undefined;",
									"});",
									"",
									"pm.environment.set(\"Generated_PublisherAccessToken\", responseJson.access_token);",
									"pm.environment.set(\"Generated_PublisherRefreshToken\", responseJson.refresh_token);",
									""
								],
								"type": "text/javascript",
								"id": "55ca6d03-4f5e-4154-b1f5-7dc1084bb022"
							}
						}
					],
					"id": "17c941da-02ef-495c-90a2-a7506a51c02f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							},
							{
								"key": "Authorization",
								"value": "{{Encoded_ClientKey_ClientSecret}}"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "grant_type",
									"value": "password",
									"type": "text"
								},
								{
									"key": "username",
									"value": "{{SymPublisher_Login_Username}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{SymPublisher_Login_Password}}",
									"type": "text"
								}
							]
						},
						"url": "{{IdentityServerUrl}}/token/"
					},
					"response": []
				}
			],
			"id": "ef9e5c38-72bf-4842-a227-c259e2ad087e"
		},
		{
			"name": "1 - Advertiser",
			"item": [
				{
					"name": "1.1- POST Advertiser (empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser - empty request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiser\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "c59ae962-467f-4e78-b57e-cb9554a414b4"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "2c51f3a5-3fc1-4b53-896b-959e4238fb89"
							}
						}
					],
					"id": "f0273d1b-46c2-4c5d-8cde-0e38f9ea2625",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.2- POST Advertiser (invalid advertiser name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Name request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiser.name\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "baf2aea3-8f55-47a7-8f53-5c84b8fb32d4"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "f648f3f4-5401-498e-94b7-edc63476460a"
							}
						}
					],
					"id": "1768fee0-af59-4236-962b-054af8f4fe65",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": {{Invalid_AdvertiserName}},\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"AUS\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": \"EXAMPLE_REF\",\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": \"examplecontact@adslot.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.3- POST Advertiser (invalid country code)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Country Code request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"CountryCode\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "580ce1c4-3abf-4b46-96df-b40ed7e16582"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "038a6c26-85aa-4327-abb3-ad122e2a931c"
							}
						}
					],
					"id": "6a304d68-39d5-42c1-9b26-286e2c0eb04d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Advertiser\",\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": \"EXAMPLE_REF\",\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": \"examplecontact@adslot.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.4- POST Advertiser (invalid billing reference)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Billing Reference request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiser.billingClientRef\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "5477cae7-a47f-4335-821c-1f948a422053"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "1c48eb69-f080-4ebd-9af6-1a3d53da9b59"
							}
						}
					],
					"id": "8f7df04c-ac91-41f4-a032-8a1cb8c0363d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Advertiser\",\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"AUS\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": {{Invalid_BillingReference}},\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": \"examplecontact@adslot.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.5- POST Advertiser (invalid email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Contact Email request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiser.marketingContactEmail\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "90c02cfa-15ca-49be-adcd-cc5575d4990a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "5366a03a-1ace-4bb3-a4b7-750ad02e41b4"
							}
						}
					],
					"id": "03c3617f-abdf-49e1-9b81-4863a8aee86e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Advertiser\",\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"AUS\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": \"EXAMPLE_REF\",\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": {{Invalid_ConstactEmail}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.6+ POST Advertiser (to inactivate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.be.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Advertiser is created by validating name and id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.name, \"name\").to.eql(\"Inactivate_PublicAPI Test Advertiser\");\r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    \r",
									"    pm.environment.set(\"Generated_InactivatedAdvertiserId\", responseJson.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "35ffb364-5ad4-4405-8719-8fd2137e44f2"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "c6fc7f7f-5200-4710-84e6-8efb9c6adaee"
							}
						}
					],
					"id": "374dff73-24e7-443d-add7-e26418f1dfff",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Advertiser\",\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"AUS\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": \"EXAMPLE_REF\",\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": \"examplecontact@adslot.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.7- POST Product (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f3dc98e4-0a13-4cdb-8fc0-e0e56eceaee4"
							}
						}
					],
					"id": "314f49eb-9e10-4678-85b0-8ce01d38cb5c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Product\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_AdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.8- POST Product (invalid - empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Empty request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"product\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "dbc38207-257b-44f5-9796-0deeba9391d1"
							}
						}
					],
					"id": "f8fdcb2e-a9ea-4522-812b-3b9487318b90",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.9- POST Product (invalid product name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Product Name request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"product.name\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ec8b2085-5ee8-42d8-8459-045062feb7dd"
							}
						}
					],
					"id": "ccd61ab3-9766-4abb-bebb-6a76c8728309",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": {{Invalid_AdvertiserName}}\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.10+ POST Product (to inactivate)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.be.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Product is created by validating name and id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    pm.expect(responseJson.name, \"name\").to.be.eql(\"Inactivate_PublicAPI Test Product\");\r",
									"    \r",
									"    pm.environment.set(\"Generated_ProductName\", responseJson.name);\r",
									"    pm.environment.set(\"Generated_ProductId\", responseJson.id);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "3faeabfe-f8b9-4009-86bd-b97bcc1e2132"
							}
						}
					],
					"id": "24f4e877-d6de-4513-8853-f14d1bc2111d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Inactivate_PublicAPI Test Product\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.11- POST Inactivate Product (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "409d1eef-33f6-4cce-93b0-4062549b2c9a"
							}
						}
					],
					"id": "a136b410-7870-4f6c-a583-5f65bc020cd6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_InactivatedAdvertiserId}}/products/{{Generated_ProductId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.12- POST Inactivate Product (invalid product Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Product Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"productId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8954b968-b2a2-432f-b3e2-076ddbf563cc"
							}
						}
					],
					"id": "0e946add-d588-4661-849d-a80d5d587f0f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/products/{{Invalid_ProductId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.13+ POST Inactivate Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ecd20921-da8a-4d44-b4b5-b97627840e43"
							}
						}
					],
					"id": "dc6aaacb-1db0-4a16-af0e-e8628b4c3656",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/products/{{Generated_ProductId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.14- POST Inactivate Advertiser (Unsuccesful)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "f5a6fb0e-2a59-49ab-8f23-780c06b45012"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "43357ebb-0e26-4a53-a55d-137f1b636e08"
							}
						}
					],
					"id": "628b309b-ca07-429d-bdc5-df0c9edeff5e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_InactivatedAdvertiserId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.15+ POST Inactivate Advertiser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "bc6abf3b-5764-49e6-840f-448ade60a821"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "bfa6f071-37e5-475d-9282-8be8800430da"
							}
						}
					],
					"id": "9cb2c1fc-7a0f-420c-826a-9d72b0eebb81",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.16- POST Inactivate Advertiser (Unsuccesful - already inactivated advertiser)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Already Inactivated Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"agencyBranchAdvertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e008f9b5-4794-4110-a2ae-f74e361f51e5"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "ca7a84cf-5f40-4359-b2ff-9f473d4274b5"
							}
						}
					],
					"id": "419aff5f-bf42-4d12-ac4e-97ca5acd25a7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_InactivatedAdvertiserId}}/inactivate"
					},
					"response": []
				},
				{
					"name": "1.17+ POST Advertiser",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.be.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Advertiser is created by validating name and id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.name, \"name\").to.eql(\"PublicAPI Test Advertiser\");\r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    \r",
									"    pm.environment.set(\"Generated_AdvertiserId\", responseJson.id);\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"id": "cc78c60d-d20f-40e8-8efe-b3de5ca0971b"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d5cd14ae-89a9-42c8-86b9-bc5f3697f112"
							}
						}
					],
					"id": "7b23a222-a560-4d99-a699-b453d6d2db5a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPI Test Advertiser\",\r\n  \"addressLine1\": \"10-14 Waterloo St\",\r\n  \"addressLine2\": \"Surry Hills NSW\",\r\n  \"zipCode\": \"2000\",\r\n  \"countryCode\": \"AUS\",\r\n  \"phone\": \"9123 4567\",\r\n  \"fax\": \"9246 8101\",\r\n  \"billingClientRef\": \"EXAMPLE_REF\",\r\n  \"marketingContactName\": \"Example Contact Name\",\r\n  \"marketingContactEmail\": \"examplecontact@adslot.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.18+ POST Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.be.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Product is created by validating name and id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    pm.expect(responseJson.name, \"name\").to.be.eql(\"PublicAPI Test Product\");\r",
									"    \r",
									"    pm.environment.set(\"Generated_ProductName\", responseJson.name);\r",
									"    pm.environment.set(\"Generated_ProductId\", responseJson.id);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "5cabcf4f-a6e7-46c6-a599-8a7dbd6b01c2"
							}
						}
					],
					"id": "0da30029-5194-408d-b686-d5dbda283604",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPI Test Product\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_AdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.19+ GET Advertisers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validating existing advertiser(s) by name, id and contact details\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"\r",
									"    for (var advertiser of responseJson) {\r",
									"        pm.expect(advertiser.name, \"name\").not.to.be.null;\r",
									"        pm.expect(advertiser.id, \"id\").not.to.be.null;\r",
									"        pm.expect(advertiser.marketingContactName, \"marketingContactName\").not.to.be.null;\r",
									"        pm.expect(advertiser.marketingContactEmail, \"marketingContactEmail\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e1934f43-29ea-4741-9083-1f218c120991"
							}
						}
					],
					"id": "1c171028-b259-4aac-b116-1d96e5ce32a9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.20- GET Advertisers (Unauthorized user)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.be.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"Already Inactivated Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.message, \"message\").to.eql(\"Authorization has been denied for this request.\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "3eef4b57-fd86-4466-996f-0ac9530600b0"
							}
						}
					],
					"id": "adadd890-dc81-40df-8602-adea1ff2f1e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text",
								"disabled": true
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers"
					},
					"response": []
				},
				{
					"name": "1.21+ GET Products",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validating existing product(s) by name and id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"    \r",
									"    for (var product of responseJson) {\r",
									"        pm.expect(product.name, \"name\").not.to.be.null;\r",
									"        pm.expect(product.id, \"id\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2e7bf46d-55f2-4d23-8198-93afad8ac964"
							}
						}
					],
					"id": "56632f43-f8e8-43c7-a7ca-2c728d88ce3f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_AdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.22- GET Products (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a2eaf037-0c81-446d-bcc0-2d5ddbe02087"
							}
						}
					],
					"id": "fc80bc5f-9fa2-4d31-b0f0-8b01b26a353c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_AdvertiserId}}/products"
					},
					"response": []
				},
				{
					"name": "1.23+ GET AdvertiserById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validating existing advertiser by advertiser Id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.name, \"name\").to.eql(\"PublicAPI Test Advertiser\");\r",
									"    pm.expect(responseJson.id, \"id\").to.equal(pm.environment.get(\"Generated_AdvertiserId\"));\r",
									"});"
								],
								"type": "text/javascript",
								"id": "360d602f-39ff-4185-8cee-463f4e00e28d"
							}
						}
					],
					"id": "b9eb9964-e68a-4101-bf50-0022022565cc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_AdvertiserId}}"
					},
					"response": []
				},
				{
					"name": "1.24- GET AdvertiserById (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "4f97ad7f-0872-48f7-ab9a-5ef60b214939"
							}
						}
					],
					"id": "6e21b64f-e9dd-4ef2-ad68-fc54248e4372",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_AdvertiserId}}"
					},
					"response": []
				},
				{
					"name": "1.25+ GET ProductById",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Validating existing product by product Id\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.name, \"name\").to.eql(\"PublicAPI Test Product\");\r",
									"    pm.expect(responseJson.id, \"id\").to.equal(pm.environment.get(\"Generated_ProductId\"));\r",
									"});"
								],
								"type": "text/javascript",
								"id": "b8861886-6610-4571-b00c-a536ff5991f8"
							}
						}
					],
					"id": "30022139-e406-4f4b-8b01-5cbcf4634892",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_AdvertiserId}}/products/{{Generated_ProductId}}"
					},
					"response": []
				},
				{
					"name": "1.26- GET ProductById (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"advertiserId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "04cb7ce7-0657-4324-9d69-436330d06aba"
							}
						}
					],
					"id": "ada5d4ee-2d1e-4246-b244-b8727944cb13",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Invalid_AdvertiserId}}/products/{{Generated_ProductId}}"
					},
					"response": []
				},
				{
					"name": "1.27- GET ProductById (invalid product Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Product Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.eql(\"productId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e9dd5669-b277-4296-a724-ae8e9a6945f9"
							}
						}
					],
					"id": "eea35537-db76-46e9-94f6-35fdb0c55ddb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/advertisers/{{Generated_AdvertiserId}}/products/{{Invalid_ProductId}}"
					},
					"response": []
				}
			],
			"id": "beda09b2-323d-43bc-a8fa-d23688a2ffc9"
		},
		{
			"name": "2 - Agreements",
			"item": [
				{
					"name": "2.1+ POST AgencyFeeAgreement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.be.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned Agreements are NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var agreement of responseJson) {\r",
									"        var agencyBranchAdvertiserUniqueId = pm.environment.get(\"Generated_AdvertiserId\");\r",
									"        var startDate = pm.variables.get(\"Generated_StartDate\");\r",
									"        var endDate = pm.variables.get(\"Generated_EndDate\");\r",
									"\r",
									"        pm.expect(agreement.uniqueId, \"uniqueId\").not.to.be.null;\r",
									"        pm.expect(agreement.agreementName, \"agreementName\").not.to.be.null;\r",
									"        pm.expect(agreement.agencyBranchAdvertiserUniqueId, \"agencyBranchAdvertiserUniqueId\").not.to.be.null;\r",
									"        pm.expect(agreement.applyOn, \"applyOn\").to.be.eql(\"GROSS\");\r",
									"        pm.expect(agreement.rate, \"rate\").to.be.eql(5.00000);\r",
									"        pm.expect(agreement.startDate, \"startDate\").to.be.eql(startDate + \"T00:00:00\");\r",
									"        pm.expect(agreement.endDate, \"endDate\").to.be.eql(endDate + \"T00:00:00\");\r",
									"        pm.expect(agreement.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"    }\r",
									"\r",
									"    pm.environment.set(\"Generated_AgencyFeeAgreementUniqueId\", responseJson[0].uniqueId);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "dd2ee1fe-206d-48ea-b2ed-954d34cefcc0"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "e098d13a-869f-4f42-b472-de3526f56051"
							}
						}
					],
					"id": "c187f60f-19cb-47be-ac7a-3708cd9728e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t  \"agreementName\": \"PublicAPI_Agreement_{{$guid}}\",\r\n\t  \"agencyBranchAdvertiserUniqueId\": \"{{Generated_AdvertiserId}}\",\r\n\t  \"applyOn\": \"GROSS\",\r\n\t  \"rate\": \"5.00000\",\r\n\t  \"startDate\": \"{{Generated_StartDate}}\",\r\n\t  \"endDate\": \"{{Generated_EndDate}}\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements"
					},
					"response": []
				},
				{
					"name": "2.2+ GET AgencyFeeAgreement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned TotalItems are NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalItems).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    pm.expect(responseJson.agencyFeeAgreements.length, \"agencyFeeAgreements\").to.be.above(0);\r",
									"\r",
									"    for (var agreement of responseJson.agencyFeeAgreements) {\r",
									"        pm.expect(agreement.uniqueId, \"uniqueId\").not.to.be.null;\r",
									"        pm.expect(agreement.agreementName, \"agreementName\").not.to.be.null;\r",
									"        pm.expect(agreement.advertiserIds, \"advertiserIds\").not.to.be.null;\r",
									"        pm.expect(agreement.applyOn, \"applyOn\").not.to.be.null;\r",
									"        pm.expect(agreement.rate, \"rate\").not.to.be.null;\r",
									"        pm.expect(agreement.startDate, \"startDate\").not.to.be.null;\r",
									"        pm.expect(agreement.endDate, \"endDate\").not.to.be.null;\r",
									"        pm.expect(agreement.status, \"status\").not.to.be.null;\r",
									"        pm.expect(agreement.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"        pm.expect(agreement.updatedDateUtc, \"updatedDateUtc\").to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fb4a0998-bcdb-42e9-aba6-193df28be84a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "e54858e8-8753-4a0d-9d6c-e440747b2396"
							}
						}
					],
					"id": "11dd8bfd-1be2-46ad-b93e-585f0f2f0806",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements?advertiserUniqueId={{Generated_AdvertiserId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"administration",
								"agencyFeeAgreements"
							],
							"query": [
								{
									"key": "advertiserUniqueId",
									"value": "{{Generated_AdvertiserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2.3- GET AgencyFeeAgreement (invalid advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid advertiser Id response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Cannot return agreements. The advertiserUniqueId is invalid or does not exist.\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "8d4b79a8-624c-4d29-b29f-1905fccb9f63"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "26ad1b39-945b-4dfa-b718-e4018fba7ce1"
							}
						}
					],
					"id": "f9c64563-682f-41a9-8cd4-f40f5774d48c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements?advertiserUniqueId={{Invalid_AdvertiserId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"administration",
								"agencyFeeAgreements"
							],
							"query": [
								{
									"key": "advertiserUniqueId",
									"value": "{{Invalid_AdvertiserId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2.4- POST AgencyFeeAgreement (invalid unique Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Unique Id response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"agreements[0].AgencyBranchAdvertiserUniqueId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "4fa235d1-4cff-49cc-ba3b-bf813b092de0"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "d69e2a6c-95f5-4a04-bdf4-f45254814c39"
							}
						}
					],
					"id": "bc7dbc3b-9684-4fc5-9818-3035abca99af",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t  \"uniqueId\": \"{{Invalid_AgencyFeeAgreementUniqueId}}\",\r\n\t  \"endDate\": \"{{Generated_AgreementEndDate}}\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements"
					},
					"response": []
				},
				{
					"name": "2.5- POST AgencyFeeAgreement (invalid EndDates)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid end date response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"agreements[0].Agreement End Date is invalid. Check the format is yyyy-MM-dd\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "b700e09d-ff8d-425c-9791-e259fc7c567a"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "a397dc15-85c5-4f8d-b07b-052c2f42d3bd"
							}
						}
					],
					"id": "b417ed0c-b4f9-4b1c-9e6e-73b5ee251912",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t  \"uniqueId\": \"{{Generated_AgencyFeeAgreementUniqueId}}\",\r\n\t  \"endDate\": \"{{Invalid_AgreementEndDate}}\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements/endDates"
					},
					"response": []
				},
				{
					"name": "2.6- POST AgencyFeeAgreement (invalid - empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid end date response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Failed to archive agreements. Maximum 500 per request.\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "24190f3d-affa-43fd-ae8b-601881fc6c6c"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "eef91c43-170c-4473-94a0-576bb649d4f2"
							}
						}
					],
					"id": "3e216ac9-b132-4776-8e01-799c72136313",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements/archive"
					},
					"response": []
				},
				{
					"name": "2.7+ POST AgencyFeeAgreement EndDates",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "77b820cd-236c-46d1-b98b-056b01f43ccd"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "69ced64a-954f-455d-8988-848f9d3ae53d"
							}
						}
					],
					"id": "e6ad4b83-64ce-4783-a100-35f92c5e0ca8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t  \"uniqueId\": \"{{Generated_AgencyFeeAgreementUniqueId}}\",\r\n\t  \"endDate\": \"{{Generated_AgreementEndDate}}\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements/endDates"
					},
					"response": []
				},
				{
					"name": "*2.8+ POST AgencyFeeAgreement Mapping [Requires FT: Shared Agency Fee Agreement]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "692bc3d6-ff47-4d5c-9a34-6ff1f1a30666",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code, \"Feature Toggle: 'Shared Agency Fee Agreement' must be enabled!\").to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "71f80ea8-2c7b-46f4-a650-91dd2c763972",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ad88b4a4-ba3e-4825-9be8-6d0a4bbcfb88",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {},
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t\"{{Generated_InactivatedAdvertiserId}}\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements/mapping?agencyFeeAgreementUniqueId={{Generated_AgencyFeeAgreementUniqueId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"administration",
								"agencyFeeAgreements",
								"mapping"
							],
							"query": [
								{
									"key": "agencyFeeAgreementUniqueId",
									"value": "{{Generated_AgencyFeeAgreementUniqueId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "2.9+ POST AgencyFeeAgreement Archive",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1207249a-aa0f-482b-931b-2b0b8e954872"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "414fcdc4-b23c-43b5-8d45-4828612d68cd"
							}
						}
					],
					"id": "c3551474-aae3-4329-9d0e-817863ed98fc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t\"{{Generated_AgencyFeeAgreementUniqueId}}\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/administration/agencyFeeAgreements/archive"
					},
					"response": []
				},
				{
					"name": "2.10+ GET AgencyFeeAgreements (by AgreementId - after updates)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    var uniqueId = pm.environment.get(\"Generated_AgencyFeeAgreementUniqueId\");\r",
									"    pm.expect(responseJson.uniqueId, \"uniqueId\").to.be.eql(uniqueId);\r",
									"    pm.expect(responseJson.agreementName, \"agreementName\").not.to.be.null;\r",
									"    pm.expect(responseJson.advertiserIds, \"advertiserIds\").not.to.be.null;\r",
									"    pm.expect(responseJson.applyOn, \"applyOn\").to.be.eql(\"GROSS\");\r",
									"    pm.expect(responseJson.rate, \"rate\").to.be.eql(5.00000);\r",
									"    pm.expect(responseJson.startDate, \"startDate\").not.to.be.null;\r",
									"    var endDate = pm.environment.get(\"Generated_AgreementEndDate\");\r",
									"    pm.expect(responseJson.endDate, \"endDate\").to.be.eql(endDate + \"T00:00:00\");\r",
									"    pm.expect(responseJson.status, \"status\").to.be.eql(\"inactive\");\r",
									"    pm.expect(responseJson.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"    pm.expect(responseJson.updatedDateUtc, \"updatedDateUtc\").not.to.be.null;\r",
									"});"
								],
								"type": "text/javascript",
								"id": "eb2ed672-b61e-47f0-830f-9c4d7031b3b9"
							}
						}
					],
					"id": "44d8fbfd-85cd-47e5-bdbc-5612a489c22f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1//administration/agencyFeeAgreements/byAgreementId?agencyFeeAgreementUniqueId={{Generated_AgencyFeeAgreementUniqueId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"",
								"administration",
								"agencyFeeAgreements",
								"byAgreementId"
							],
							"query": [
								{
									"key": "agencyFeeAgreementUniqueId",
									"value": "{{Generated_AgencyFeeAgreementUniqueId}}"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "5debb66b-b6f7-46e2-af4f-6308beabaf4c"
		},
		{
			"name": "3 - Campaign",
			"item": [
				{
					"name": "3.1+ POST Campaign",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "4a850868-49f6-4765-b170-315b2f24d456"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Valid Response\", () => {\r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    pm.expect(responseJson.name, \"name\").not.to.be.null;\r",
									"    pm.expect(responseJson.startDate, \"startDate\").not.to.be.null;\r",
									"    pm.expect(responseJson.endDate, \"endDate\").not.to.be.null;\r",
									"    pm.expect(responseJson.isDeleted, \"isDeleted\").to.be.an(\"boolean\");\r",
									"\r",
									"    pm.expect(responseJson.advertiser.id, \"advertiserId\").not.to.be.null;\r",
									"    pm.expect(responseJson.advertiser.name, \"advertiserName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.brand.id, \"brandId\").not.to.be.null;\r",
									"    pm.expect(responseJson.brand.name, \"branName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.agencyContact.name, \"agencyContactName\").not.to.be.null;\r",
									"    pm.expect(responseJson.agencyContact.email, \"agencyContactEmail\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.agencyBranch.id, \"agencyBranchId\").not.to.be.null;\r",
									"    pm.expect(responseJson.agencyBranch.name, \"agencyBranchName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.referenceCode, \"referenceCode\").to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.adServer.key, \"adServerKey\").not.to.be.undefined;\r",
									"    pm.expect(responseJson.adServer.isCostSharedWithAdServer, \"isCostSharedWithAdServer\").to.be.a(\"boolean\");\r",
									"\r",
									"    pm.expect(responseJson.adServer.isCostSharedWithAdServer, \"isCostSharedWithAdServer\").to.be.a(\"boolean\");\r",
									"\r",
									"    pm.expect(responseJson.trackingServers, \"trackingServers\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.defaultLandingPageUrl, \"defaultLandingPageUrl\").to.be.empty;\r",
									"\r",
									"    pm.expect(responseJson.budgets, \"budgets\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.customFields, \"customFields\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.links, \"links\").to.be.an(\"array\").and.not.to.be.null;\r",
									"    for (var link of responseJson.links){\r",
									"        pm.expect(link.href, \"linkHref\").to.be.a(\"String\");\r",
									"        pm.expect(link.rel, \"linkRel\").to.be.a(\"String\");\r",
									"    }\r",
									"\r",
									"    pm.expect(responseJson.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.updatedDate, \"updatedDate\").to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.billingAllocationCostBasis, \"billingAllocationCostBasis\").to.be.a(\"String\");\r",
									"\r",
									"    pm.expect(responseJson.referenceCodeEditableInUI, \"referenceCodeEditableInUI\").to.be.a(\"boolean\");\r",
									"});\r",
									"\r",
									"pm.environment.set(\"Generated_CampaignName\", responseJson.name);\r",
									"pm.environment.set(\"Generated_CampaignId\", responseJson.id);"
								],
								"type": "text/javascript",
								"id": "29f4c4a5-0ab7-4998-a11f-35372c97ef4e"
							}
						}
					],
					"id": "91cbbc12-74e6-4af1-99fa-21f94da1f192",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.2- POST Campaign (Inactive Advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e21239f7-2a16-4c73-95e4-a3fd8f32549f",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Selected client is inactive during the selected dates.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b13d18be-2728-4d30-905c-bb56c00ef795",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Existing_InactivatedClientId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.3+ GET Campaigns",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Created campaign has correct details\", () => {\r",
									"    pm.expect(responseJson.id, \"id\").not.to.be.null;\r",
									"    pm.expect(responseJson.name, \"name\").not.to.be.null;\r",
									"    pm.expect(responseJson.startDate, \"startDate\").not.to.be.null;\r",
									"    pm.expect(responseJson.endDate, \"endDate\").not.to.be.null;\r",
									"    pm.expect(responseJson.isDeleted, \"isDeleted\").to.be.a(\"boolean\");\r",
									"\r",
									"    pm.expect(responseJson.advertiser.id, \"advertiserId\").not.to.be.null;\r",
									"    pm.expect(responseJson.advertiser.name, \"advertiserName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.brand.id, \"brandId\").not.to.be.null;\r",
									"    pm.expect(responseJson.brand.name, \"branName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.agencyContact.name, \"agencyContactName\").not.to.be.null;\r",
									"    pm.expect(responseJson.agencyContact.email, \"agencyContactEmail\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.agencyBranch.id, \"agencyBranchId\").not.to.be.null;\r",
									"    pm.expect(responseJson.agencyBranch.name, \"agencyBranchName\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.adServer, \"adServer\").not.to.be.null;\r",
									"    pm.expect(responseJson.adServer.key, \"adServerKey\").not.to.be.null;\r",
									"    pm.expect(responseJson.adServer.isCostSharedWithAdServer, \"adServerShareCost\").not.to.be.null;\r",
									"    \r",
									"    pm.expect(responseJson.trackingServers, \"trackingServers\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.defaultLandingPageUrl, \"defaultLandingPageUrl\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.links, \"links\").to.be.an(\"array\").and.not.to.be.null;\r",
									"    for (var link of responseJson.links){\r",
									"        pm.expect(link.href, \"linkHref\").to.be.a(\"String\");\r",
									"        pm.expect(link.rel, \"linkRel\").to.be.a(\"String\");\r",
									"    }\r",
									"\r",
									"    pm.expect(responseJson.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.updatedDate, \"updatedDate\").to.be.null;\r",
									"\r",
									"    pm.expect(responseJson.billingAllocationCostBasis, \"billingAllocationCostBasis\").to.be.a(\"String\");\r",
									"\r",
									"    pm.expect(responseJson.referenceCodeEditableInUI, \"referenceCodeEditableInUI\").to.be.a(\"boolean\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "483d1262-0e7d-4e35-a975-2af83dde8faf"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "2ba66ca4-0206-4695-8616-b80a2179ad8e"
							}
						}
					],
					"id": "85c739c6-ec47-4137-b36f-e11416079cae",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Generated_CampaignId}}"
					},
					"response": []
				},
				{
					"name": "3.4+ GET Campaign Ids",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Valid Response\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"\r",
									"    for (var campaignMetaData of responseJson){\r",
									"        pm.expect(campaignMetaData.id, \"id\").not.to.be.null;\r",
									"        pm.expect(campaignMetaData.name, \"name\").not.to.be.null;\r",
									"        pm.expect(campaignMetaData.createdDateUtc, \"createdDateUtc\").not.to.be.null;\r",
									"        pm.expect(campaignMetaData.updatedDate, \"updatedDate\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a34c831d-5e05-48c8-be94-37d8157a28df"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "56631ec5-ba01-47fb-a519-44ea4264b715"
							}
						}
					],
					"id": "a9730ac1-7b14-4790-83a9-47921cf6f42a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaignIds?updatedOnOrAfter={{Generated_StartOfTheCurrentYear}}&updatedBefore={{Generated_EndDate}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaignIds"
							],
							"query": [
								{
									"key": "updatedOnOrAfter",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "updatedBefore",
									"value": "{{Generated_EndDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3.5+ PUT Campaign",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "f370b9bb-2142-4677-a85a-0c4e18a0814f"
							}
						}
					],
					"id": "9df849f6-02a7-4996-84d2-1b004c890a24",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Updated_PublicAPITestCampaign_{{$guid}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Generated_CampaignId}}"
					},
					"response": []
				},
				{
					"name": "3.6- POST Campaign (Invalid Country Budget)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Country Budget: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"budgets[0].countryCode\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9673ae4b-ab0f-4ba6-8f5c-339649cb8b23"
							}
						}
					],
					"id": "3a75ab79-6aba-400e-89b9-d2aa5b693505",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  },\r\n  \"budgets\": [\r\n  {\r\n    \"countryCode\": \"IDN\",\r\n    \"currency\": \"USD\",\r\n    \"budget\": \"2000.00\",\r\n    \"purchaseOrderReferenceCode\": \"XERO_REF_123_987\"\r\n  }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.7- POST Campaign (Invalid Reference Code)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Reference Code: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"referenceCode\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "874d335e-d4c0-4358-b890-d5ffcd6b21a4"
							}
						}
					],
					"id": "29107e68-0a75-4f86-bafd-f396a2de5bc1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  },\r\n  \"referenceCode\": \"ReferenceCode_long_{{$guid}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.8- POST Campaign (Invalid Agency Contact)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Agency Contact: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"email\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "a2539023-2440-4c66-9b5a-23b4f12d5149"
							}
						}
					],
					"id": "9374de1e-82f8-41c0-9d87-7fb15bab8d2c",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{Invalid_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.9- POST Campaign (Empty Brand Name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Empty Brand Name: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"brand.name\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "b1d61c2d-ac56-46ee-a321-fb6ef6930586"
							}
						}
					],
					"id": "daf4ef7e-fe94-4ad5-bd57-8c156bcb6ea3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.10- POST Campaign (Invalid Advertiser Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Advertiser Id: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"advertiser.id\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "aa97873c-f955-4979-bc23-29222064237f"
							}
						}
					],
					"id": "3c3c04a1-db06-430a-81f4-308644d4c306",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Generated_StartDate}}\",\r\n  \"endDate\": \"{{Generated_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Invalid_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAgency_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.11- POST Campaign (Invalid Start Date)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Start Date: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaign.startDate\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "af338abf-45bb-4533-ae37-acd5341baff4"
							}
						}
					],
					"id": "b14b28f0-5ea8-4022-a739-de56642c6389",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"PublicAPITestCampaign_{{$guid}}\",\r\n  \"startDate\": \"{{Invalid_StartDate}}\",\r\n  \"endDate\": \"{{Invalid_EndDate}}\",\r\n  \"advertiser\": {\r\n  \"id\": \"{{Generated_AdvertiserId}}\"\r\n  },\r\n  \"brand\": {\r\n  \"name\": \"{{Generated_ProductName}}\"\r\n  },\r\n  \"agencyContact\": {\r\n  \"email\": \"{{SymAdmin_Login_Username}}\"\r\n  }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns"
					},
					"response": []
				},
				{
					"name": "3.12- GET Campaigns (Unauthorized User)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", () => {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"Unauthorized User \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.message, \"message\").to.be.eql(\"Authorization has been denied for this request.\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "256f9f20-c812-41ce-89b7-05335d415324"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "5bd4ee63-b960-4698-bde0-0e934c745355"
							}
						}
					],
					"id": "a6c69638-5dd3-497c-b024-2a12a8500cb3",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Generated_CampaignId}}"
					},
					"response": []
				},
				{
					"name": "3.13- GET Campaign Ids (Date Out of Range)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Date out of range:\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"updatedBefore\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"id": "dc9af3da-2ee0-4bd0-ae83-e5c9fc26510b"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "fce32d0d-b0eb-4cc1-830b-97c568906eab"
							}
						}
					],
					"id": "af65e442-4a48-4910-afb0-47f1a06dcbfe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaignIds?updatedOnOrAfter={{Generated_StartOfTheCurrentYear}}&updatedBefore=10000-01-01 11:40:41.160",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaignIds"
							],
							"query": [
								{
									"key": "updatedOnOrAfter",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "updatedBefore",
									"value": "10000-01-01 11:40:41.160"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "3.14- PUT Campaign (Invalid Start Date)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Date Update Request:\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaign.startDate\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "5860ae6f-8467-441e-ba8e-813d48fa0a89"
							}
						}
					],
					"id": "3b8ca007-9666-43d6-8d50-480742865bbd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"startDate\": \"{{Invalid_StartDate}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Generated_CampaignId}}"
					},
					"response": []
				},
				{
					"name": "3.15- PUT Campaign (Invalid Campaign Name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Name Update Request:\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaign.name\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "0e11c951-c28a-420a-9c24-1d312f91301b"
							}
						}
					],
					"id": "20d0eb31-c5ae-412c-9878-59fe0bf22141",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Generated_CampaignId}}"
					},
					"response": []
				}
			],
			"id": "e26e5633-bdb9-4f4d-ba38-b75000a70cf5"
		},
		{
			"name": "4 - CostItem",
			"item": [
				{
					"name": "4.1+ GET CostItems",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "38fa81f2-a7f5-4caa-83e3-187ea7349a94",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"    pm.expect(responseJson.costItems.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Response is valid\", () => {\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.type, \"type\").not.to.be.null;\r",
									"        pm.expect(costItem.status, \"status\").not.to.be.null;\r",
									"        pm.expect(costItem.id, \"id\").not.to.be.null;\r",
									"        pm.expect(costItem.name, \"name\").not.to.be.null;\r",
									"        pm.expect(costItem.costItemCategory, \"costItemCategory\").not.to.be.undefined;\r",
									"        pm.expect(costItem.createdDate, \"createdDate\").not.to.be.null;\r",
									"        pm.expect(costItem.updatedDate, \"updatedDate\").not.to.be.null;\r",
									"        pm.expect(costItem.startDate, \"startDate\").not.to.be.null;\r",
									"        pm.expect(costItem.endDate, \"endDate\").not.to.be.null;\r",
									"        pm.expect(costItem.countryCode, \"countryCode\").not.to.be.null;\r",
									"        pm.expect(costItem.description, \"description\").not.to.be.null;\r",
									"        pm.expect(costItem.purchaseOrderReferenceCode, \"purchaseOrderReferenceCode\").not.to.be.null;\r",
									"        pm.expect(costItem.currency, \"currency\").not.to.be.null\r",
									"        pm.expect(costItem.buyCurrency, \"buyCurrency\").not.to.be.null;\r",
									"        pm.expect(costItem.exchangeRate, \"exchangeRate\").to.be.a(\"number\");\r",
									"\r",
									"        pm.expect(costItem.vendor.type, \"vendorType\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.category, \"vendorCategory\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.id, \"vendorId\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.countryCode, \"vendorCountryCode\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.name, \"vendorName\").not.to.be.null;\r",
									"\r",
									"        if (costItem.package !== null){\r",
									"        pm.expect(costItem.package.id, \"packageId\").not.to.be.null;\r",
									"        pm.expect(costItem.package.purchaseType, \"packagePurchaseType\").not.to.be.null;\r",
									"        pm.expect(costItem.package.ratecard, \"packageRatecard\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.baseRate, \"packageBaseRate\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.ratecardCost, \"packageRatecardCost\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.goal, \"packageGoal\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.baseCost, \"packageBaseCost\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.calculationBasis, \"packageCalculationBasis\").not.to.be.null;\r",
									"        pm.expect(costItem.package.goalByHour, \"packageGoalByHour\").not.to.be.null;\r",
									"        pm.expect(costItem.package.budgetCapped, \"packageBudgetCapped\").to.be.a(\"boolean\");\r",
									"        pm.expect(costItem.package.billingSource, \"packageBillingSource\").not.to.be.null;\r",
									"        pm.expect(costItem.package.thirdPartyAdServer, \"packageThirdPartyAdServer\").not.to.be.null;\r",
									"\r",
									"        pm.expect(costItem.package.forecast.estCTR, \"packageForecasetEstCTR\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estCVR, \"packageForecasetEstCVR\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estVTR, \"packageForecasetEstVTR\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estImpressions, \"packageForecasetEstImpressions\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estClicks, \"packageForecasetEstClicks\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estAcquisitions, \"packageForecasetEstAcquisitions\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.forecast.estViews, \"packageForecasetEstViews\").to.be.a(\"number\");\r",
									"\r",
									"        pm.expect(costItem.package.site.id, \"packageSiteId\").not.to.be.null;\r",
									"        pm.expect(costItem.package.site.category, \"packageSiteCategory\").not.to.be.null;\r",
									"        pm.expect(costItem.package.site.name, \"packageSiteName\").not.to.be.null;\r",
									"\r",
									"        pm.expect(costItem.package.trackingDetails.model, \"packageTrackingDetailsModel\").not.to.be.null;\r",
									"        pm.expect(costItem.package.trackingDetails.percentageOfClientCost, \"packageTrackingDetailsPercentageOfClientCost\").to.be.a(\"number\");\r",
									"\r",
									"        if (costItem.package.trackingDetails.thirdPartyTypeRatePairs !== null){\r",
									"            for(var thirdPartyTypeRatePair of costItem.package.trackingDetails.thirdPartyTypeRatePairs){\r",
									"                pm.expect(thirdPartyTypeRatePair.type, \"packageTrackingDetailsThirdPartyTypeRatePairType\").not.to.be.null;\r",
									"                pm.expect(thirdPartyTypeRatePair.rate, \"packageTrackingDetailsThirdPartyTypeRatePairRate\").to.be.a(\"number\");\r",
									"            }\r",
									"        }\r",
									"\r",
									"        pm.expect(costItem.package.trackingDetails.model, \"packageTrackingDetailsModel\").not.to.be.null;\r",
									"        pm.expect(costItem.package.trackingDetails.percentageOfClientCost, \"packageTrackingDetailsPercentageOfClientCost\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.trackingDetails.thirdPartyTypeRatePairs, \"packageTrackingDetailsThirdPartyRatePairs\").not.to.be.undefined;\r",
									"        pm.expect(costItem.package.trackingDetails.fourthPartyRate.typeName, \"packageTrackingDetailsFourthPartyRateTypeName\").not.to.be.null;\r",
									"        pm.expect(costItem.package.trackingDetails.fourthPartyRate.rate, \"packageTrackingDetailsFourthPartyRateRate\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.trackingDetails.thirdPartyCost, \"packageTrackingDetailsThirdPartyCost\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.trackingDetails.fourthPartyCost, \"packageTrackingDetailsFourthPartyCost\").to.be.a(\"number\");\r",
									"\r",
									"        pm.expect(costItem.package.costPeriods, \"packageCostPeriods\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"        for(var placement of costItem.package.placements){\r",
									"            pm.expect(placement.adServerTrackingType, \"placementAdServerTrackingType\").not.to.be.null;\r",
									"            pm.expect(placement.id, \"placementId\").not.to.be.null;\r",
									"            pm.expect(placement.name, \"placementName\").not.to.be.null;\r",
									"            pm.expect(placement.location, \"placementLocation\").not.to.be.null;\r",
									"            pm.expect(placement.format, \"placementFormat\").to.be.an(\"object\").and.not.to.be.null;\r",
									"            pm.expect(placement.format.formatWidth, \"placementFormatWidth\").not.to.be.null;\r",
									"            pm.expect(placement.format.formatHeight, \"placementFormatHeight\").not.to.be.null;\r",
									"            pm.expect(placement.format.formatName, \"placementFormatName\").not.to.be.null;\r",
									"            pm.expect(placement.devices, \"placementDevices\").to.be.an(\"array\").and.not.to.be.null;\r",
									"            pm.expect(placement.landingPage, \"placementLandingPage\").not.to.be.undefined;\r",
									"            pm.expect(placement.sov, \"placementSOV\").to.be.a(\"number\");\r",
									"            pm.expect(placement.targetingComments, \"placementTargetingComments\").not.to.be.null;\r",
									"            pm.expect(placement.generalComments, \"placementGeneralComments\").not.to.be.null;\r",
									"            pm.expect(placement.customFields, \"placementCustomFields\").to.be.an(\"array\").and.not.to.be.null;\r",
									"            pm.expect(placement.placementSettings, \"placementSettings\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        }\r",
									"\r",
									"        pm.expect(costItem.package.taxes, \"packageTaxes\").to.be.an(\"array\").and.not.to.be.null;\r",
									"\r",
									"        pm.expect(costItem.package.frequencyCapping.frequencyCapping, \"packageFrequencyCapping\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.frequencyCapping.impressionsPer, \"packageFrequencyCappingImpressionPer\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.package.frequencyCapping.timeUnit, \"packageFrequencyCappingTimeUnit\").not.to.be.null;\r",
									"\r",
									"        pm.expect(costItem.package.customForecasts, \"packageCustomForecasts\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        pm.expect(costItem.package.customFields, \"packageCustomFields\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        pm.expect(costItem.package.packageTraffickingSettings, \"packageTraffickingSettings\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        pm.expect(costItem.package.packageSettings, \"packageSettings\").to.be.an(\"array\").and.not.to.be.null;\r",
									"    }\r",
									"\r",
									"        pm.expect(costItem.costs.vendorCost.negotiated, \"vendorCostNegotiated\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.vendorCost.purchase, \"vendorCostPurchase\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.vendorCost.netMedia, \"vendorCostNetMedia\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.vendorCost.netNetMedia, \"vendorCostNetNetMedia\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.vendorCost.final, \"vendorCostFinal\").to.be.a(\"number\");\r",
									"\r",
									"        for(var adjustment of costItem.costs.vendorCost.adjustments){\r",
									"            pm.expect(adjustment.applyOn, \"vendorAdjustmentApplyOn\").not.to.be.null;\r",
									"            pm.expect(adjustment.key, \"vendorAdjustmentKey\").not.to.be.null;\r",
									"            pm.expect(adjustment.rate, \"vendorAdjustmentRate\").to.be.a(\"number\");\r",
									"            pm.expect(adjustment.cost, \"vendorAdjustmentCost\").to.be.a(\"number\");\r",
									"            pm.expect(adjustment.costDerived, \"vendorAdjustmentCostDerived\").to.be.a(\"boolean\");\r",
									"            pm.expect(adjustment.isEnabled, \"vendorAdjustmentIsEnabled\").to.be.a(\"boolean\");\r",
									"            pm.expect(adjustment.isAccumulative, \"vendorAdjustmentIsAccumulative\").to.be.a(\"boolean\");\r",
									"        }\r",
									"\r",
									"        pm.expect(costItem.costs.clientCost.negotiated, \"clientCostNegotiated\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.clientCost.purchase, \"clientCostPurchase\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.clientCost.netMedia, \"clientCostNetMedia\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.clientCost.netNetMedia, \"clientCostNetNetMedia\").to.be.a(\"number\");\r",
									"        pm.expect(costItem.costs.clientCost.final, \"clientCostFinal\").to.be.a(\"number\");\r",
									"\r",
									"        for (adjustment of costItem.costs.clientCost.adjustments){\r",
									"            pm.expect(adjustment.applyOn, \"clientCostAdjusmentApplyOn\").not.to.be.null;\r",
									"            pm.expect(adjustment.key, \"clientCostAdjusmentKey\").not.to.be.null;\r",
									"            pm.expect(adjustment.rate, \"clientCostAdjusmentRate\").to.be.a(\"number\");\r",
									"            pm.expect(adjustment.cost, \"clientCostAdjusmentCost\").to.be.a(\"number\");\r",
									"            pm.expect(adjustment.costDerived, \"clientCostAdjusmentCostDerived\").to.be.a(\"boolean\");\r",
									"            pm.expect(adjustment.isEnabled, \"clientCostAdjusmentIsEnabled\").to.be.a(\"boolean\");\r",
									"            pm.expect(adjustment.isAccumulative, \"clientCostAdjusmentIsAccumulative\").to.be.a(\"boolean\");\r",
									"        }\r",
									"\r",
									"        pm.expect(costItem.classifications, \"classification\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        pm.expect(costItem.isCancelled, \"isCancelled\").to.be.a(\"boolean\");\r",
									"        pm.expect(costItem.comments, \"comments\").not.to.be.null;\r",
									"        pm.expect(costItem.links, \"links\").to.be.an(\"array\").and.not.to.be.null;\r",
									"        pm.expect(costItem.agencyFeeAgreement.id, \"agencyFeeAgreementId\").not.to.be.undefined;\r",
									"\r",
									"        if (costItem.status === \"SIGNEDOFF\"){\r",
									"            var signedoffCostItemId = costItem.id;\r",
									"        }\r",
									"\r",
									"        pm.environment.set(\"Generated_CostItemId\", signedoffCostItemId);\r",
									"\r",
									"        if (costItem.status !== \"SIGNEDOFF\"){\r",
									"            var accaptedOrConfirmedCostItemId = costItem.id;\r",
									"        }\r",
									"\r",
									"        pm.environment.set(\"Generated_AccaptedOrConfirmedCostItemId\", accaptedOrConfirmedCostItemId);\r",
									"    }\r",
									"\r",
									"    var lowDate = new Date(costItem.updatedDate);\r",
									"    lowDate.setUTCHours(0, 0, 0, 0);\r",
									"    pm.environment.set(\"Generated_LowDateIsoFormat\", lowDate);\r",
									"\r",
									"    var highDate = new Date(lowDate);\r",
									"    highDate.setUTCDate(lowDate.getUTCDate() + 1);\r",
									"    pm.environment.set(\"Generated_HighDateIsoFormat\", highDate);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "9aa11871-94b0-4830-bd5f-2d7ad95663e4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems"
					},
					"response": []
				},
				{
					"name": "4.2+ GET CostItems (Updated between dates)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a8158429-f195-4d65-98a2-cc8a2abfec45",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Cost items with updated time is within range\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"\r",
									"    var moment = require('moment');\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        var updatedDate = moment(costItem.updatedDate);\r",
									"        var lowDate = moment(pm.environment.get(\"Generated_LowDateIsoFormat\"));\r",
									"        var highDate = moment(pm.environment.get(\"Generated_HighDateIsoFormat\"));\r",
									"        pm.expect(updatedDate.isSameOrAfter(lowDate, 'day'), \"updatedDate is less than lowDate\").to.be.true;\r",
									"        pm.expect(updatedDate.isBefore(highDate, 'day'), \"updatedDate is greater than or equal to highDate\").to.be.true;\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ccd64a46-36fc-44a0-bab9-f2342c0977ac",
								"exec": [
									"var moment = require('moment');\r",
									"var lowDate = moment(pm.environment.get(\"Generated_LowDateIsoFormat\")).format(\"MM/DD/YYYY\");\r",
									"pm.environment.set(\"Generated_LowDate\", lowDate);\r",
									"var highDate = moment(pm.environment.get(\"Generated_HighDateIsoFormat\")).format(\"MM/DD/YYYY\");\r",
									"pm.environment.set(\"Generated_HighDate\", highDate);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e86eab5b-6b62-40a2-bfc0-0311c92ea9c5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?updatedOnOrAfter={{Generated_LowDate}}&updatedBefore={{Generated_HighDate}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "updatedOnOrAfter",
									"value": "{{Generated_LowDate}}"
								},
								{
									"key": "updatedBefore",
									"value": "{{Generated_HighDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.3+ GET CostItems (latestSignedOnly)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "9446b281-7007-49c2-a083-9c9f12683cf2",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"Cost items status must be SIGNEDOFF\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.totalCostItems, \"totalCostItems\").to.be.above(0);\r",
									"\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.status).to.be.eql(\"SIGNEDOFF\");\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ff37573e-8893-4d47-aee9-8511cf16bff9",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?latestSignedOnly=true",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "latestSignedOnly",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.4+ GET CostItems (latestApprovedOnly)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6ca3bf12-27fa-4387-9970-0fe0dcbe30b9",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"Cost items status must be Approved\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.status).not.to.be.null;\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "22c1548a-c8fd-44a7-81fb-fdb7a9af65d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?latestApprovedOnly=true",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "latestApprovedOnly",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.5+ GET CostItems (pageSize and pageNumber)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.be.status(200);",
									"});",
									"",
									"pm.test(\"Cache-Control is private\", () => {",
									"    pm.response.to.be.header('Cache-Control', 'private');",
									"});",
									"",
									"const responseJson = pm.response.json();",
									"",
									"pm.test(\"Cost items status must be CONFIRMED\", () => {",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);",
									"",
									"    for (var costItem of responseJson.costItems) {",
									"        pm.expect(costItem.id, \"id\").not.to.be.null;",
									"        pm.expect(costItem.name, \"name\").not.to.be.null;",
									"        pm.expect(costItem.startDate, \"startDate\").not.to.be.null;",
									"        pm.expect(costItem.endDate, \"endDate\").not.to.be.null;",
									"    }",
									"});"
								],
								"type": "text/javascript",
								"id": "b88375ef-304f-446c-aa64-0daa32d4fae9"
							}
						}
					],
					"id": "7344d1ec-7d70-4d2c-8ea1-fb9f0eefe29f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?pagesize=1&pageNumber=1",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "pagesize",
									"value": "1"
								},
								{
									"key": "pageNumber",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.6- GET CostItems (Empty Query Value)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Invalid Request (No Query Value):\", () => {\r",
									"   const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"latestApprovedOnly\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "55a2f56e-b5ef-4794-a819-f10d88005aa5"
							}
						}
					],
					"id": "b1bbea16-ac88-4500-a272-4e9075a70bfc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?latestApprovedOnly=",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "latestApprovedOnly",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.7- GET CostItems (Invalid Campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Invalid Campaign Id Request\", () => {\r",
									"   const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaignId\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "527f1df5-3dc2-4c6c-b6a6-28501aee8539"
							}
						}
					],
					"id": "1e2fa498-1bfc-43a1-893e-ab260feec652",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/costItems"
					},
					"response": []
				},
				{
					"name": "4.8- GET CostItems (Invalid Page Number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Invalid Page Number Request\", () => {\r",
									"   const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"pageNumber\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "e16f776b-74ed-4ab1-b91d-93738abb3fce"
							}
						}
					],
					"id": "64bada6d-d221-4aaf-a65c-c937a2438372",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?pageNumber=100",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.9- GET CostItems (Invalid Page Size)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Invalid Page Size Request\", () => {\r",
									"   const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"pageSize\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "c5d60171-39b6-4dff-97e2-c38833ab0d82"
							}
						}
					],
					"id": "9a9085d1-9054-4af7-8e0c-10755921da69",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?pageSize=100",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "100"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4.10- GET CostItems (Invalid Date Format)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Invalid Date (Format) Request\", () => {\r",
									"   const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"updatedBefore\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"id": "e1af56a7-f07e-4680-bacf-44ce7b6a5ce1"
							}
						}
					],
					"id": "796fc753-b008-4fb6-b0f1-448b194c206a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/costItems?updatedBefore=1800-01-32 04:09:43.6122",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"costItems"
							],
							"query": [
								{
									"key": "updatedBefore",
									"value": "1800-01-32 04:09:43.6122"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "6868f30a-3e9f-4921-b555-acc72143f53f"
		},
		{
			"name": "5 - Billings",
			"item": [
				{
					"name": "5.1+ GET Billings",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43d04d02-0b95-4d56-a489-354af0209e41",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned TotalItems/Billings is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalItems).to.be.above(0);\r",
									"    pm.expect(responseJson.billings.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"var costItemId = pm.environment.get(\"Generated_CostItemId\");\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var billing of responseJson.billings) {\r",
									"        pm.expect(billing.costItemId, \"costItemId\").not.to.be.null;\r",
									"        pm.expect(billing.vendorId, \"vendorId\").not.to.be.null;\r",
									"        pm.expect(billing.allocationType, \"allocationType\").not.to.be.null;\r",
									"        pm.expect(billing.currency, \"currency\").not.to.be.null;\r",
									"        pm.expect(billing.countryCode, \"countryCode\").not.to.be.null;\r",
									"        pm.expect(billing.purchaseCost, \"purchaseCost\").not.to.be.null;\r",
									"        pm.expect(billing.netMediaCost, \"netMediaCost\").not.to.be.null;\r",
									"\r",
									"        pm.environment.set(\"Generated_VendorId\", responseJson.billings[0].vendorId);\r",
									"\r",
									"        for (var billingSplit of billing.billingSplits) {\r",
									"            pm.expect(billingSplit.year, \"year\").not.to.be.null;\r",
									"            pm.expect(billingSplit.month, \"month\").not.to.be.null;\r",
									"            pm.expect(billingSplit.costSource, \"costSource\").not.to.be.null;\r",
									"            pm.expect(billingSplit.status, \"status\").not.to.be.null;\r",
									"\r",
									"            if (billing.costItemId == costItemId){\r",
									"                pm.environment.set(\"Generated_BillingSplitYear\", billing.billingSplits[0].year);\r",
									"                pm.environment.set(\"Generated_BillingSplitMonth\", billing.billingSplits[0].month);\r",
									"                pm.environment.set(\"Generated_BillingSplitYearLocked\", billingSplit.year);\r",
									"                pm.environment.set(\"Generated_BillingSplitMonthLocked\", billingSplit.month);\r",
									"            }\r",
									"        }\r",
									"    }\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "e2282bfa-8afa-4cb3-90d2-428be9e90831",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings"
					},
					"response": []
				},
				{
					"name": "*5.2+ GET Billings (by vendor Id) [Requires FT: Billing API Extension]",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61dc4e5c-8514-4fc2-ad7e-0c69bcd3cd16",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.expect(pm.response.code, \"Feature Toggle: 'Billing API Extension' must be enabled!\").to.eql(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"if (pm.response.code === 200){\r",
									"\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.test(\"Returned TotalItems/Billings is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalItems).to.be.above(0);\r",
									"    pm.expect(responseJson.billings.length).to.be.above(0);\r",
									"    });\r",
									"\r",
									"    pm.test(\"Valid response\", () => {\r",
									"        for (var billing of responseJson.billings) {\r",
									"            pm.expect(billing.costItemId, \"costItemId\").not.to.be.null;\r",
									"            pm.expect(billing.vendorId, \"vendorId\").not.to.be.null;\r",
									"            pm.expect(billing.allocationType, \"allocationType\").not.to.be.null;\r",
									"            pm.expect(billing.currency, \"currency\").not.to.be.null;\r",
									"            pm.expect(billing.countryCode, \"countryCode\").not.to.be.null;\r",
									"            pm.expect(billing.purchaseCost, \"purchaseCost\").not.to.be.null;\r",
									"            pm.expect(billing.netMediaCost, \"netMediaCost\").not.to.be.null;\r",
									"\r",
									"            for (var billingSplit of billing.billingSplits) {\r",
									"                pm.expect(billingSplit.year, \"year\").not.to.be.null;\r",
									"                pm.expect(billingSplit.month, \"month\").not.to.be.null;\r",
									"                pm.expect(billingSplit.costSource, \"costSource\").not.to.be.null;\r",
									"                pm.expect(billingSplit.status, \"status\").not.to.be.null;\r",
									"            }\r",
									"        }\r",
									"    });\r",
									"\r",
									"    pm.test(\"Response must be for requested vendor\", () => {\r",
									"        var requestedVendorId = pm.environment.get(\"Generated_VendorId\");\r",
									"\r",
									"        for (var billing of responseJson.billings) {\r",
									"            pm.expect(billing.vendorId, \"vendorId\").not.to.be.null;\r",
									"            pm.expect(billing.vendorId).to.be.equal(requestedVendorId);\r",
									"        }\r",
									"    });\r",
									"}\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68a99307-382e-48bb-b4d5-1ee6d4a651f6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "3ad79400-f4cc-4ede-9e75-c64e979058fd",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings?vendorId={{Generated_VendorId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"billings"
							],
							"query": [
								{
									"key": "vendorId",
									"value": "{{Generated_VendorId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.3- GET Billings (invalid vendor Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61dc4e5c-8514-4fc2-ad7e-0c69bcd3cd16",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"vendorId\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "68a99307-382e-48bb-b4d5-1ee6d4a651f6",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b320d7b1-a454-4427-9ed3-ee68826ed411",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings?vendorId={{Invalid_VendorId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"billings"
							],
							"query": [
								{
									"key": "vendorId",
									"value": "{{Invalid_VendorId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.4- GET Billings (invalid campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaignId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9ad044e2-f237-4c86-8176-a7e563a91e5e"
							}
						}
					],
					"id": "3503499a-dd83-4fed-9688-67a3f5b4b754",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/billings"
					},
					"response": []
				},
				{
					"name": "5.5- GET Billings (invalid - non existant campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ca9662b6-2896-4f26-a063-2691fa3026ca"
							}
						}
					],
					"id": "87f33076-1f3c-4271-927f-9b7632fc726f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/58cbb8e4-b041-457f-8397-fadd8f58da3d/billings"
					},
					"response": []
				},
				{
					"name": "5.6- GET Billings (invalid page size)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Page Size request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"pageSize\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "4f44dea9-db7d-4422-9999-1a2edcc179b2"
							}
						}
					],
					"id": "b1794c07-105b-47ad-a8fe-cf3eb8ed8dd1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings?pageSize=-1",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"billings"
							],
							"query": [
								{
									"key": "pageSize",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.7- GET Billings (invalid page number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Page Number request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"pageNumber\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "da05e38a-1156-48f1-b01a-41124e0a27bf"
							}
						}
					],
					"id": "b8e39bc0-9d99-43f9-bff3-4fd3ce7ea0ed",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings?pageNumber=-1",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"billings"
							],
							"query": [
								{
									"key": "pageNumber",
									"value": "-1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.8+ PUT Billing Splits (Planned)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,3,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "4c94738b-51cb-4f0c-b7bb-118822451ef2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.9+ PUT Billing Splits (Actual)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,3,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ae844671-4ddb-436b-9ffe-78f5a4ff20a6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Custom\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Actual\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.10+ PUT Billing Splits (Lock Actual)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,1,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "68a93f4b-753d-44a4-9cc0-f2381d3a70b8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYearLocked}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonthLocked}}\",\r\n\t\t\"status\": \"Locked\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Actual\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.11- PUT Billing Splits (Locked Acutal - No Status)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Billing Split Allocation (FirstPary) request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"status\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Updates cannot be made to billing months that are already locked. Please contact your Symphony Administrator for more information.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,3,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "ac076359-14f9-4fb0-a08f-7e6b36b12ad0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYearLocked}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonthLocked}}\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Actual\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.12- PUT Billing Splits (FirstParty)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Billing Split Allocation (FirstPary) request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"costSource\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Updates cannot be made to this campaign as it does not have the required functionality. Please contact your Symphony Administrator for more information.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,3,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "57190ba7-8d3a-4240-addf-1f34cfae3fd2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"FirstParty\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.13- PUT Billing Splits (Confirmed CostItem)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6c72524b-73ec-4bf6-8a22-c28fe24d4405",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1b21bdd7-779a-4016-87d8-d01d50c01561",
								"exec": [
									"pm.environment.set(\"Generated_billingAmount\", _.random(0,3,true));"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "80a8328d-beec-456a-a1f2-ef964171adc0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\t{\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Actual\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_AccaptedOrConfirmedCostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.14- PUT Billing Splits (invalid - empty request)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Empty request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fad49b3b-1a23-48d6-826c-5e8626892ef7"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "bf5d5887-1f63-4c9c-9cc8-c522190367ea"
							}
						}
					],
					"id": "cffd1314-36e6-4089-ba97-53ce6c2b7494",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.15- PUT Billing Splits (invalid campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaignId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "65b82401-99db-480d-9d1f-dfc1a4345bb5"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "2c7e0abe-4ced-4a07-95c0-61325edfe86e"
							}
						}
					],
					"id": "aa525e93-78c0-43ae-bcb5-d7edd4832f52",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.16- PUT Billing Splits (invalid cost item)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Cost Item Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"costItemId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "0cf9481c-c8f9-470e-b011-bb70fcd99ef8"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "87aae06f-952b-48c6-9a58-1b483dee627a"
							}
						}
					],
					"id": "cc7165b1-488e-4e3e-a942-4c43aa57fff2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Invalid_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.17- PUT Billing Splits (invalid amount)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Amount request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits[0].amount\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "faf1eab1-560c-49ab-ab8b-fade2dad117e"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "fe5ac62c-6d58-4e72-8705-5d420ed4a4cc"
							}
						}
					],
					"id": "6abeeda3-bbbf-4764-b4f9-c2b9e7b39a40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": -5.00,\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.18- PUT Billing Splits (invalid status)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Status request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits[0].status\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e670c384-a104-42a4-b14a-056c17fb8a6f"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "da26e506-e1ad-4941-9cfe-56ee5925d5d8"
							}
						}
					],
					"id": "b1e3c743-ea3a-4fe5-9328-78cd4c36c9a0",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"InvalidStatus\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.19- PUT Billing Splits (invalid year)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Year request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits[0].year\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d7d9ff63-5ffb-416d-ab09-195af1e28641"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "f287602d-2d6f-49df-acd8-d9f5e4e923b1"
							}
						}
					],
					"id": "0868803c-093a-483c-9784-32d7a8cbc56f",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Invalid_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.20- PUT Billing Splits (invalid month)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Month request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits[0].month\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1a568b9d-1627-46bc-bf1d-6d87c5c8c182"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "7f819361-82fb-4b58-8181-b48e01434517"
							}
						}
					],
					"id": "a86d8be9-47c7-4cf3-8539-a112f000a5f5",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Invalid_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.21- PUT Billing Splits (invalid cost source)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Cost Source request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"billingSplits[0].costSource\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "70c9d858-05fe-40c7-8d0f-c7b2aa14e657"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "6903643d-e9ff-42db-892f-6613caffa201"
							}
						}
					],
					"id": "68794cf1-6188-4aa6-bd97-1e9e3e80029a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": {{Generated_billingAmount}},\r\n        \"costSource\": \"InvalidCostSource\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				},
				{
					"name": "5.22- PUT Billing Splits (invalid - amount greater than planned total)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid - Amount greater than Planned Total request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"amount\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Updates cannot be made as it would cause a negative value in billing splits.\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "350796f9-e599-40da-88a7-671cec4ee678"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "f4c3bc6d-6663-4d74-8877-d9681782edfa"
							}
						}
					],
					"id": "08605679-0274-4fc5-b20e-a176b1f012da",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n\t\t\"year\": \"{{Generated_BillingSplitYear}}\",\r\n\t\t\"month\": \"{{Generated_BillingSplitMonth}}\",\r\n\t\t\"status\": \"Auto\",\r\n\t\t\"amount\": 10000000000,\r\n        \"costSource\": \"Planned\"\r\n\t}\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/billings/{{Generated_CostItemId}}/billingSplits"
					},
					"response": []
				}
			],
			"id": "effbccb4-8fb2-448e-a844-fa245052d0ad"
		},
		{
			"name": "6 - InsertionOrder",
			"item": [
				{
					"name": "6.1+ GET IO CostItems (by IO number and version)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ffe6afdc-6e18-4fc0-b8a9-946036f43218",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"\r",
									"    pm.expect(responseJson.costItems.length).to.be.above(0);\r",
									"\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.name, \"name\").not.to.be.null;\r",
									"        pm.expect(costItem.id, \"id\").not.to.be.null;\r",
									"        pm.expect(costItem.startDate, \"startDate\").not.to.be.null;\r",
									"        pm.expect(costItem.endDate, \"endDate\").not.to.be.null;\r",
									"        pm.expect(costItem.location, \"location\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "f593e4e0-ea33-4727-b833-91a971166cda",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "b6e7e855-4275-42fc-921b-fc500f5bee78",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.2+ GET IO Metadata (by IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var IOmetadata of responseJson) {\r",
									"        pm.expect(IOmetadata.name, \"name\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.version, \"version\").to.be.above(0);\r",
									"        pm.expect(IOmetadata.status, \"status\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.totalCost, \"totalCost\").to.be.a('number');\r",
									"        pm.expect(IOmetadata.ioBuyer, \"ioBuyer\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.ioApprover, \"ioApprover\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.settings, \"settings\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2ec099eb-c892-4f14-853e-d01ee9d0fae7"
							}
						}
					],
					"id": "2fe8e571-31b3-4bda-a148-d7a4276e8285",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}"
					},
					"response": []
				},
				{
					"name": "6.3+ POST IO Settings (by IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "993cc86b-0af8-4fe0-ac6f-feeeb516d4c3"
							}
						}
					],
					"id": "da4a4c72-f805-428a-b510-7f02147f0bc7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalReferenceId\": \"IO-REF-1\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/Settings"
					},
					"response": []
				},
				{
					"name": "6.4+ POST IO Settings (by IO unique Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1bafe6fb-b3b9-452d-a6e8-3eb39dd620c3"
							}
						}
					],
					"id": "23b0b89e-5888-489f-9f17-4ed1bbc2c6ca",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalReferenceId\": \"IO-REF-2\",\r\n  \"externalApprovalPermitted\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/InsertionOrders/{{Existing_IOUniqueId}}/Settings"
					},
					"response": []
				},
				{
					"name": "6.5+ GET IO CostItems (by IO unique Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"\r",
									"    pm.expect(responseJson.costItems.length).to.be.above(0);\r",
									"\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.name, \"name\").not.to.be.null;\r",
									"        pm.expect(costItem.id, \"id\").not.to.be.null;\r",
									"        pm.expect(costItem.startDate, \"startDate\").not.to.be.null;\r",
									"        pm.expect(costItem.endDate, \"endDate\").not.to.be.null;\r",
									"        pm.expect(costItem.location, \"location\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "af347b1c-3f86-4724-9ee4-9ed01015a783"
							}
						}
					],
					"id": "d096fe2e-5db6-45c3-aec7-54f3124b0721",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/InsertionOrders/{{Existing_IOUniqueId}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.6+ GET IO Metadata (by IO unique Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var IOmetadata of responseJson) {\r",
									"        pm.expect(IOmetadata.name, \"name\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.version, \"version\").to.be.above(0);\r",
									"        pm.expect(IOmetadata.status, \"status\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.totalCost, \"totalCost\").to.be.a('number');\r",
									"        pm.expect(IOmetadata.ioBuyer, \"ioBuyer\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.ioApprover, \"ioApprover\").not.to.be.null;\r",
									"        pm.expect(IOmetadata.settings, \"settings\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "c55c85d8-c3d9-4ae7-b4a3-d9071c91ba0e"
							}
						}
					],
					"id": "fa6007f5-a718-4585-9f2b-b847e1535efc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/InsertionOrders/{{Existing_IOUniqueId}}"
					},
					"response": []
				},
				{
					"name": "6.7- GET IO CostItems (invalid camapign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaignId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "785fc250-1fee-4eaf-a861-fd6bfacbf200"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "f5649b13-5d47-4ecd-b0d3-aaf84a6cf4aa"
							}
						}
					],
					"id": "44761bb0-5963-4f9e-8eeb-b96f53b093b7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.8- GET IO CostItems (invalid IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid IONumber request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"IONumber\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "7391e4f5-379d-40a7-b7f4-89ead36a91bd"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "2c5e4d51-985d-407c-af96-ca4ed7fda042"
							}
						}
					],
					"id": "70eb4510-2ebf-44dc-9aa3-46f03233c65a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Invalid_IONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.9- GET IO CostItems (non-existent IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7391e4f5-379d-40a7-b7f4-89ead36a91bd",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2c5e4d51-985d-407c-af96-ca4ed7fda042",
								"exec": [
									"pm.environment.set(\"Generated_NonExistingIONumber\", '1234-1-1');"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "c681848a-17fb-47e8-a599-af712c2d2ecc",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Generated_NonExistingIONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.10- GET IO CostItems (non-existent IO version)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7391e4f5-379d-40a7-b7f4-89ead36a91bd",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2c5e4d51-985d-407c-af96-ca4ed7fda042",
								"exec": [
									"pm.environment.set(\"Generated_NonExistingIOVersion\", '5');"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1c8aed64-bc34-4805-93c2-c09b90ca8a5b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/{{Generated_NonExistingIOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.11- GET IO CostItems (invalid IO version)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ebcf9e61-6fd8-4f85-ad82-30f9d89ec7cd"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "62d02463-9fab-4781-ab8a-c50dac2b37f9"
							}
						}
					],
					"id": "fe4e617f-3112-4974-9836-df66c96a7454",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/{{Invalid_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "6.12- GET IO Metadata (invalid campaign id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "23f1f18c-4739-4440-ba6a-cecf0bb2ffcd"
							}
						}
					],
					"id": "007bfda8-dc45-4408-bd2e-90375bc0909d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}"
					},
					"response": []
				},
				{
					"name": "6.13- GET IO Metadata (invalid IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d158c882-b9c5-494d-aa44-0a7d5a2a6a0c"
							}
						}
					],
					"id": "21d4b3c2-2938-4d0e-8dce-222544dcf8d1",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Invalid_IONumber}}"
					},
					"response": []
				},
				{
					"name": "6.14- GET IO Metadata (invalid params)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid IONumber request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Unknown Parameter - invalid_params\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e107274f-d76c-46b7-80d4-edf691938261"
							}
						}
					],
					"id": "b4755b6d-21e9-4aab-8187-69b0b76aff94",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}?invalid_params=",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"campaigns",
								"{{Existing_CampaignId}}",
								"RFPInsertionOrders",
								"{{Existing_IONumber}}"
							],
							"query": [
								{
									"key": "invalid_params",
									"value": ""
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "6.15- POST IO Settings (invalid campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Campaign Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"campaignId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "3094a30b-9e4e-4246-8321-740f1170aef0"
							}
						}
					],
					"id": "cbde1b9f-32bc-4da9-862c-f880e5d4e33d",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalReferenceId\": \"IO-REF-1\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/Settings"
					},
					"response": []
				},
				{
					"name": "6.16- POST IO Settings (invalid external reference id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid External referenece Id request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"insertionOrderSettings.externalReferenceId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "6fc68922-2949-4c98-94fb-db70ee7f43bb"
							}
						}
					],
					"id": "6bdcdedd-fc84-4f94-a1c1-34e65bd1e7d8",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalReferenceId\":\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/Settings"
					},
					"response": []
				},
				{
					"name": "6.17- POST IO Settings (invalid settings name)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid settings name request: \", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"insertionOrderSettings.newSettingName\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "7fb93e81-981b-40e4-a68a-eb5b8a67e21d"
							}
						}
					],
					"id": "c2e80c69-af60-48df-b45a-a8d1511e247e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"newSettingName\":\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Existing_IONumber}}/Settings"
					},
					"response": []
				},
				{
					"name": "6.18- POST IO Settings (invalid IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "4f56a32f-f5bc-4fa3-bc71-99ae1ab3ff9a"
							}
						}
					],
					"id": "e44d86cb-2c1b-4833-b4c3-b37a31b1c62b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"externalReferenceId\": \"IO-REF-1\" \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/{{Invalid_IONumber}}/Settings"
					},
					"response": []
				}
			],
			"id": "b8634b72-24bd-4bb8-8ab3-cbc95f2b40f3"
		},
		{
			"name": "7 - Applications",
			"item": [
				{
					"name": "7.1+ GET Applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned Applications are NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var application of responseJson) {\r",
									"        pm.expect(application.id, \"id\").not.to.be.null;\r",
									"        pm.expect(application.name, \"name\").not.to.be.null;\r",
									"        pm.expect(application.mappingTypes, \"mappingTypes\").to.be.an(\"array\");\r",
									"        pm.expect(application.mappingTypes.type, \"mappingType\").not.to.be.null;\r",
									"        pm.expect(application.mappingTypes.secondaryIdTypes, \"mappingSecondaryIdTypes\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "894dfb47-baa2-4470-981b-5ea83a2dc039"
							}
						}
					],
					"id": "680caecb-28d8-44d1-9f50-62522372d6de",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/applications"
					},
					"response": []
				},
				{
					"name": "7.2+ GET Applications DataMapping (SecondaryID)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valid mapping response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    var localMappingId = pm.environment.get(\"Existing_MappingId\");\r",
									"\r",
									"    pm.expect(responseJson.type, \"type\").to.be.eql(\"PUBLISHER\");\r",
									"    pm.expect(responseJson.id, \"id\").to.be.eql(localMappingId);\r",
									"    pm.expect(responseJson.foreignId, \"foreignId\").to.be.eql(\"10066\");\r",
									"    pm.expect(responseJson.lastUpdated, \"lastUpdated\").not.to.be.null;\r",
									"});"
								],
								"type": "text/javascript",
								"id": "69997800-0809-4204-96dc-fe9dcaf7606b"
							}
						}
					],
					"id": "6215faba-3af7-4711-8dd6-afab244029ad",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{Existing_AppId}}/dataMappings/{{Existing_MappingId}}?secondaryId={{Existing_MappingSecondaryId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{Existing_AppId}}",
								"dataMappings",
								"{{Existing_MappingId}}"
							],
							"query": [
								{
									"key": "secondaryId",
									"value": "{{Existing_MappingSecondaryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.3- GET Applications DataMapping (invalid AppId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "fd89fcf1-4a79-484d-8ede-cf91cf503156"
							}
						}
					],
					"id": "cd04d9ff-aa78-4052-b32a-37f8cb94bffb",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{Invalid_AppId}}/dataMappings/{{Existing_MappingId}}?secondaryId={{Existing_MappingSecondaryId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{Invalid_AppId}}",
								"dataMappings",
								"{{Existing_MappingId}}"
							],
							"query": [
								{
									"key": "secondaryId",
									"value": "{{Existing_MappingSecondaryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.4- GET Applications DataMapping (invalid MappingId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1e96dfee-4a6a-4fc0-a1c3-230cfcf0395c"
							}
						}
					],
					"id": "b55d8125-de40-4563-a615-b1e111107b57",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{Existing_AppId}}/dataMappings/{{Invalid_MappingId}}?secondaryId={{Existing_MappingSecondaryId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{Existing_AppId}}",
								"dataMappings",
								"{{Invalid_MappingId}}"
							],
							"query": [
								{
									"key": "secondaryId",
									"value": "{{Existing_MappingSecondaryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.5- GET Applications DataMapping (invalid SecondaryId)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Secondary Id request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"secondaryId\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "58eef8ad-f8b8-421c-a525-2599fe4cd8d3"
							}
						}
					],
					"id": "de9417f3-e8dc-412a-9ab5-87092b3b9c34",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{Existing_AppId}}/dataMappings/{{Existing_MappingId}}?secondaryId={{Invalid_MappingSecondaryId}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{Existing_AppId}}",
								"dataMappings",
								"{{Existing_MappingId}}"
							],
							"query": [
								{
									"key": "secondaryId",
									"value": "{{Invalid_MappingSecondaryId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.6+ PUT Applications (Subscriptions)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned Subscriptions are NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var subscription of responseJson) {\r",
									"        pm.expect(subscription.eventName, \"eventName\").not.to.be.null;\r",
									"        pm.expect(subscription.callbackUrl, \"callbackUrl\").not.to.be.null;\r",
									"        pm.expect(subscription.secret, \"secret\").not.to.be.null;\r",
									"        pm.expect(subscription.contactEmail, \"contactEmail\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "332d77bf-8799-44dc-a726-83e11ee865fc"
							}
						}
					],
					"id": "7400ce47-d3ae-49cc-b609-c52c8012bdc7",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"CampaignApproved\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"IOIssued\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"IOSignedOff\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"BillingCustomized\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"CampaignDeleted\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  },\r\n  {\r\n  \"eventName\": \"CampaignUpdated\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.7- PUT Applications (Subscriptions - invalid - empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid - Empty request\", () => {\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"subscriptions\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "045f108b-5273-4c75-8fc5-de6d514a629f"
							}
						}
					],
					"id": "9c380a26-db65-443a-bc3a-36461a2eddb6",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.8- PUT Applications (Subscriptions - invalid eventName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Event Name request\", () => {\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"eventName\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e8dd5dfe-102e-4557-a5dd-e287e3ed04ae"
							}
						}
					],
					"id": "a883072a-983b-4e91-aa70-f463dfef1721",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"eventName\": \"InvalidEvenetName\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.9- PUT Applications (Subscriptions - invalid clientKey)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Client Key (Secret) request\", () => {\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"Secret\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d7e6fd42-d8ca-4779-9d18-d7b83247f405"
							}
						}
					],
					"id": "d89618ac-7af1-4dae-a674-891b2e430e6a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"invalidClientKey\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.10- PUT Applications (Subscriptions - invalid callbackURL)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Callback Url request\", () => {\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"CallbackUrl\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "58f6a044-aba0-4ebb-b1bc-f001de090f01"
							}
						}
					],
					"id": "4c0c3e9e-aae1-41a6-938a-242af6582957",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"callbackUrl\": \"http://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"democontact@democompany.com\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.11- PUT Applications (Subscriptions - empty contact email)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid - Empty Contact Email request\", () => {\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_MISSING\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"ContactEmail\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "1465ad24-165a-4093-80e2-77089dd427bb"
							}
						}
					],
					"id": "36b91c9c-a59a-42a2-b75c-dfe2f5f2ea4e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[\r\n  {\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"callbackUrl\": \"https://campaigncreatedcallbackurl.com\",\r\n  \"secret\": \"123456789abcdefghijklmnopqrstu\",\r\n  \"contactEmail\": \"\"\r\n  }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.12+ GET Applications (Subscriptions)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned Subscriptions are NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var event of responseJson) {\r",
									"        pm.expect(event.eventName, \"eventName\").not.to.be.null;\r",
									"        pm.expect(event.callbackurl, \"callbackurl\").not.to.be.null;\r",
									"        pm.expect(event.secret, \"secret\").not.to.be.null;\r",
									"        pm.expect(event.contactEmail, \"contactEmail\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "e6a64bd3-708b-45a8-a97c-cec7ada5e43c"
							}
						}
					],
					"id": "2daf2b2d-cf07-4df1-b41e-1a0f690ff973",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.13- GET Applications (Subscriptions invalid client Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ad4da20b-6ae3-4484-bfa5-dda7f7283d8a"
							}
						}
					],
					"id": "8f92e2be-414f-4dac-b242-d2a79e44b0ab",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/applications/{{Invalid_ClientId}}/subscriptions"
					},
					"response": []
				},
				{
					"name": "7.14+ POST Applications (Subscriptions-TestEvent)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d6ce9955-5509-472a-bf21-59fde5645c4d"
							}
						}
					],
					"id": "c899c9f5-3bb0-40e2-b627-c71fdd0feded",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"raisedBy\": \"exampleEmail@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/testEvent"
					},
					"response": []
				},
				{
					"name": "7.15- POST Applications (Subscriptions invalid - empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid - Empty request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"subscriptionTestEvent\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "518f4a52-484e-498b-87fb-776d3958b8cb"
							}
						}
					],
					"id": "37e05857-d995-4e7c-b834-850c13989039",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/testEvent"
					},
					"response": []
				},
				{
					"name": "7.16- POST Applications (Subscriptions invalid eventName)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Event Name request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"eventName\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "9ea798eb-07d7-4fa8-bfbd-25098a628399"
							}
						}
					],
					"id": "ef51fb26-2022-4512-ba56-b0f5f7cdaad2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"eventName\": \"InvalidEvenetName\",\r\n  \"raisedBy\": \"exampleEmail@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/testEvent"
					},
					"response": []
				},
				{
					"name": "7.17- POST Applications (Subscriptions invalid client Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2c41afb9-e913-4666-8436-7ff7042e8b4f"
							}
						}
					],
					"id": "46362f15-594b-498a-8202-c710856f3ed4",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"eventName\": \"CampaignCreated\",\r\n  \"raisedBy\": \"exampleEmail@example.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{PublicApiUrl}}/v1/applications/{{Invalid_ClientId}}/subscriptions/testEvent"
					},
					"response": []
				},
				{
					"name": "7.18+ GET Notification History (Between Dates)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "44af1990-0b22-4e55-a28a-6257197be54a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "15e7aa2b-632f-44db-9235-4c49aba7573c",
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.hasMoreRecords, \"hasMoreRecords\").not.to.be.null;\r",
									"    pm.expect(responseJson.nextUtcStartDate, \"nextUtcStartDate\").not.to.be.null;\r",
									"        \r",
									"        for (var notificationHistory of responseJson.notificationHistories){\r",
									"            pm.expect(notificationHistory.eventDateTimeUtc, \"eventDateTimeUtc\").not.to.be.null;\r",
									"            pm.expect(notificationHistory.eventName, \"eventName\").not.to.be.null;\r",
									"            pm.expect(notificationHistory.notification, \"notification\").not.to.be.null;\r",
									"            pm.expect(notificationHistory.isDelivered, \"isDelivered\").to.be.a('Boolean');\r",
									"            pm.expect(notificationHistory.isFailureEmailSent, \"isFailureEmailSent\").to.be.a('Boolean');\r",
									"        }\r",
									"\r",
									"    pm.environment.set(\"Generated_EventName\", responseJson.notificationHistories[0].eventName);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "1b174391-aab5-402c-b803-7819ababce40",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/notificationHistory?startDate={{Generated_StartOfTheCurrentYear}}&endDate={{Generated_EndDate}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{ClientId}}",
								"subscriptions",
								"notificationHistory"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "endDate",
									"value": "{{Generated_EndDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.19+ GET Notification History (Between Dates and Event Name)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "98e07322-2bc0-45bc-88e8-8657de0def84"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    var eventName = pm.environment.get(\"Generated_EventName\");\r",
									"\r",
									"    pm.expect(responseJson.hasMoreRecords, \"hasMoreRecords\").not.to.be.null;\r",
									"    pm.expect(responseJson.nextUtcStartDate, \"nextUtcStartDate\").not.to.be.null;\r",
									"        \r",
									"        for (var notificationHistory of responseJson.notificationHistories){\r",
									"            pm.expect(notificationHistory.eventDateTimeUtc, \"eventDateTimeUtc\").not.to.be.null;\r",
									"            pm.expect(notificationHistory.eventName, \"eventName\").to.be.eql(eventName);\r",
									"            pm.expect(notificationHistory.notification, \"notification\").not.to.be.null;\r",
									"            pm.expect(notificationHistory.isDelivered, \"isDelivered\").to.be.a('Boolean');\r",
									"            pm.expect(notificationHistory.isFailureEmailSent, \"isFailureEmailSent\").to.be.a('Boolean');\r",
									"        }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "d5ecc3fb-75c3-4852-b6de-fed1c144b5f1"
							}
						}
					],
					"id": "1a1be0d9-be22-447c-830d-0050a4c12518",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/notificationHistory?startDate={{Generated_StartOfTheCurrentYear}}&endDate={{Generated_EndDate}}&eventName={{Generated_EventName}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{ClientId}}",
								"subscriptions",
								"notificationHistory"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "endDate",
									"value": "{{Generated_EndDate}}"
								},
								{
									"key": "eventName",
									"value": "{{Generated_EventName}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.20- GET Notification History (invalid client Id)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "92e3c0b3-5e8d-4d39-bc5d-b8a694b5f61a"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "ecd1a7a0-b6dd-4d23-8094-b4dfdd75fa40"
							}
						}
					],
					"id": "ed7b405e-2f07-4d22-b05d-8e07b6bf4d36",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{Invalid_ClientId}}/subscriptions/notificationHistory?startDate={{Generated_StartOfTheCurrentYear}}&endDate={{Generated_EndDate}}",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{Invalid_ClientId}}",
								"subscriptions",
								"notificationHistory"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "endDate",
									"value": "{{Generated_EndDate}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.21- GET Notification History (invalid end date before start date)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "da543f71-9f97-4846-88cc-8d70a684363f"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid End Date request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"endDate\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "3a4612b1-6805-4e2e-bac7-22abfc8cf2f5"
							}
						}
					],
					"id": "414801de-5fb1-42b0-8240-01ebd147e407",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/notificationHistory?startDate={{Generated_StartOfTheCurrentYear}}&endDate=1/1/2019",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{ClientId}}",
								"subscriptions",
								"notificationHistory"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "endDate",
									"value": "1/1/2019"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "7.22- GET Notification History (invalid event name)",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"id": "9878d382-89ad-429a-8869-966245118afa"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid Event Name request\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"\r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"eventName\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "606cb4e4-173b-4a78-a266-704bd6904657"
							}
						}
					],
					"id": "d8c2d610-35e5-47af-b03c-74d5bcb0d324",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_AccessToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{PublicApiUrl}}/v1/applications/{{ClientId}}/subscriptions/notificationHistory?startDate={{Generated_StartOfTheCurrentYear}}&endDate={{Generated_EndDate}}&eventName=InvalidEventName",
							"host": [
								"{{PublicApiUrl}}"
							],
							"path": [
								"v1",
								"applications",
								"{{ClientId}}",
								"subscriptions",
								"notificationHistory"
							],
							"query": [
								{
									"key": "startDate",
									"value": "{{Generated_StartOfTheCurrentYear}}"
								},
								{
									"key": "endDate",
									"value": "{{Generated_EndDate}}"
								},
								{
									"key": "eventName",
									"value": "InvalidEventName"
								}
							]
						}
					},
					"response": []
				}
			],
			"id": "28eae9c1-498f-407d-8dc9-05db63c37114"
		},
		{
			"name": "8 - PublisherInsertionOrder",
			"item": [
				{
					"name": "8.1+ GET IO metadata (publisher)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of IO metadata is NOT 0\", () => {\r",
									"    pm.expect(responseJson.length).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid response\", () => {\r",
									"    for (var response of responseJson) {\r",
									"        pm.expect(response.campaignName, \"campaignName\").not.to.be.null;\r",
									"        pm.expect(response.agencyName, \"agencyName\").not.to.be.null;\r",
									"        pm.expect(response.clientName, \"clientName\").not.to.be.null;\r",
									"        pm.expect(response.insertionOrderNumber, \"insertionOrderNumber\").not.to.be.null;\r",
									"        pm.expect(response.insertionOrderVersion, \"insertionOrderVersion\").not.to.be.null;\r",
									"        pm.expect(response.country, \"country\").not.to.be.null;\r",
									"        pm.expect(response.currencyCode, \"currencyCode\").not.to.be.null;\r",
									"        pm.expect(response.dateCreated, \"dateCreated\").not.to.be.null;\r",
									"        pm.expect(response.status, \"status\").not.to.be.null;\r",
									"        pm.expect(response.ioBuyer, \"ioBuyer\").not.to.be.null;\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "08d30bf2-8a15-4e6a-b625-6b828f0c7021"
							}
						}
					],
					"id": "bb96d9e2-3107-43f2-b7ff-e7423d370536",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/publisher/{{Existing_IONumber}}"
					},
					"response": []
				},
				{
					"name": "8.2- GET IO metadata (invalid campaign Id)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "2f4e6fc7-3cec-41c6-a562-46850c98cb03"
							}
						}
					],
					"id": "90ea49a3-2046-4606-b5db-1d5612340207",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Invalid_CampaignId}}/RFPInsertionOrders/publisher/{{Existing_IONumber}}"
					},
					"response": []
				},
				{
					"name": "8.3- GET IO metadata (invalid IONumber)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4718825f-66fd-47f1-b077-d4e9d262adeb",
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "85b3646b-8c76-4b76-b807-22e39752f17b",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/publisher/{{Invalid_IONumber}}"
					},
					"response": []
				},
				{
					"name": "8.4+ GET MS items (within IO)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {\r",
									"    pm.response.to.be.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"const responseJson = pm.response.json();\r",
									"\r",
									"pm.test(\"Returned number of cost items is NOT 0\", () => {\r",
									"    pm.expect(responseJson.totalCostItems).to.be.above(0);\r",
									"});\r",
									"\r",
									"pm.test(\"Valid Response\", () => {\r",
									"    for (var costItem of responseJson.costItems) {\r",
									"        pm.expect(costItem.type, \"type\").not.to.be.null;\r",
									"        pm.expect(costItem.id, \"id\").not.to.be.null;\r",
									"        pm.expect(costItem.name, \"name\").not.to.be.null;\r",
									"        pm.expect(costItem.startDate, \"startDate\").not.to.be.null;\r",
									"        pm.expect(costItem.endDate, \"endDate\").not.to.be.null;\r",
									"        pm.expect(costItem.countryCode, \"countryCode\").not.to.be.null;\r",
									"        pm.expect(costItem.description, \"description\").not.to.be.null;\r",
									"        pm.expect(costItem.currency, \"currency\").not.to.be.null;\r",
									"\r",
									"        pm.expect(costItem.vendor.type, \"vendorType\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.category, \"vendorCategory\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.id, \"vendorId\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.countryCode, \"vendorCountryCode\").not.to.be.null;\r",
									"        pm.expect(costItem.vendor.name, \"vendorName\").not.to.be.null;\r",
									"\r",
									"        if (costItem.name !== \"Non Media Test\"){\r",
									"            pm.expect(costItem.package.id, \"packageId\").not.to.be.null;\r",
									"            pm.expect(costItem.package.purchseType, \"packagePurchaseType\").not.to.be.null;\r",
									"            pm.expect(costItem.package.ratecard, \"packageRatecard\").to.be.a('number');\r",
									"\r",
									"            pm.expect(costItem.package.site.id, \"packageSiteId\").not.to.be.null;\r",
									"            pm.expect(costItem.package.site.category, \"packageSiteCategory\").not.to.be.null;\r",
									"            pm.expect(costItem.package.site.name, \"packageSiteName\").not.to.be.null;\r",
									"\r",
									"            for(var costPeriod of costItem.package.costPeriods){\r",
									"            pm.expect(costPeriod.volume, \"packageCostPeriodsVolume\").to.be.a('number');\r",
									"            pm.expect(costPeriod.startDate, \"packageCostPeriodsStartDate\").not.to.be.null;\r",
									"            pm.expect(costPeriod.endDate, \"packageCostPeriodsEndDate\").not.to.be.null;\r",
									"            }\r",
									"\r",
									"            for(var placement of costItem.package.placements){\r",
									"            pm.expect(placement.id, \"packagePlacementId\").not.to.be.null;\r",
									"            pm.expect(placement.creativeType, \"packagePlacementCreativeType\").not.to.be.null;\r",
									"            pm.expect(placement.name, \"packagePlacementName\").not.to.be.null;\r",
									"            pm.expect(placement.location, \"packagePlacementLocation\").not.to.be.null;\r",
									"            pm.expect(placement.format.formatWidth, \"packagePlacementFormatWidth\").to.be.a('number');\r",
									"            pm.expect(placement.format.formatHeight, \"packagePlacementFormatHeight\").to.be.a('number');\r",
									"            pm.expect(placement.format.formatName, \"packagePlacementFormatName\").not.to.be.null;\r",
									"            }\r",
									"        }\r",
									"        \r",
									"        pm.expect(costItem.costs.vendorCost.negotiated, \"negotiatedVendorCost\").to.be.a('number');\r",
									"        pm.expect(costItem.costs.vendorCost.purchase, \"purchaseCost\").to.be.a('number');\r",
									"        pm.expect(costItem.costs.vendorCost.netMedia, \"netMediaCost\").to.be.a('number');\r",
									"        pm.expect(costItem.costs.vendorCost.final, \"finalCost\").to.be.a('number');\r",
									"\r",
									"        for(var costAdjustment of costItem.costs.vendorCost.adjustments){\r",
									"            pm.expect(costAdjustment.applyOn, \"vendorCostAdjusmentApplyOn\").not.to.be.null;\r",
									"            pm.expect(costAdjustment.key, \"vendorCostAdjusmentKey\").not.to.be.null;\r",
									"            pm.expect(costAdjustment.rate, \"vendorCostAdjusmentRate\").to.be.a('number');\r",
									"            pm.expect(costAdjustment.cost, \"vendorCostAdjusmentCost\").to.be.a('number');\r",
									"            pm.expect(costAdjustment.costDerived, \"vendorCostAdjusmentCostDerived\").to.be.a('boolean');\r",
									"            pm.expect(costAdjustment.isEnabled, \"vendorCostAdjusmentIsEnabled\").to.be.a('boolean');\r",
									"            pm.expect(costAdjustment.isAccumulative, \"vendorCostAdjusmentIsAccumulative\").to.be.a('boolean');\r",
									"        }\r",
									"\r",
									"        pm.expect(costItem.isCancelled, \"isCancelled\").to.be.a('boolean');\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript",
								"id": "6f30f73e-373f-4971-9694-6a2625dc1e95"
							}
						}
					],
					"id": "763df4cc-3d0c-4f36-b82b-1dc943928775",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/publisher/{{Existing_IONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "8.5- GET MS items (invalid IO number)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {\r",
									"    pm.response.to.be.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Cache-Control is private\", () => {\r",
									"    pm.response.to.be.header('Cache-Control', 'private');\r",
									"});\r",
									"\r",
									"pm.test(\"X-RateLimit headers are present\", () => {\r",
									"    pm.response.to.have.header(\"X-RateLimit-Limit\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Remaining\");\r",
									"    pm.response.to.have.header(\"X-RateLimit-Reset\");\r",
									"});\r",
									"\r",
									"pm.test(\"Invalid IO Number response\", () => {\r",
									"    const responseJson = pm.response.json();\r",
									"    \r",
									"    pm.expect(responseJson.code, \"code\").to.be.eql(\"INVALID_DATA\");\r",
									"    pm.expect(responseJson.field, \"field\").to.be.eql(\"IONumber\");\r",
									"});"
								],
								"type": "text/javascript",
								"id": "932c8f3d-a80b-4e55-8782-46f952aaf140"
							}
						}
					],
					"id": "6ba790da-b41c-4013-9aa6-ce19a5579c5a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/publisher/{{Invalid_IONumber}}/{{Existing_IOVersion}}/costItems"
					},
					"response": []
				},
				{
					"name": "8.6- GET MS items (invalid IO version)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {\r",
									"    pm.response.to.be.status(404);\r",
									"});"
								],
								"type": "text/javascript",
								"id": "0ee168b1-f9cd-4565-828b-8fa0125e81a5"
							}
						}
					],
					"id": "8350f2f8-9194-4441-b0b0-89ac43ab15e2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{Generated_PublisherAccessToken}}",
								"type": "text"
							}
						],
						"url": "{{PublicApiUrl}}/v1/campaigns/{{Existing_CampaignId}}/RFPInsertionOrders/publisher/{{Existing_IONumber}}/{{Invalid_IOVersion}}/costItems"
					},
					"response": []
				}
			],
			"id": "c7af895b-91bd-47ca-b380-c2bdb6b3ab24"
		},
		{
			"name": "X - Destroy Generated Variables",
			"item": [
				{
					"name": "GET Status - Destroy Generated Variables",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"type": "text/javascript",
								"exec": [
									"var vars = JSON.parse(JSON.stringify(pm.environment.values));",
									"for (index = 0; index < vars.length; ++index){",
									"    var key = vars[index].key;",
									"    if(key.includes(\"Generated\")){",
									"        pm.environment.unset(key);",
									"    }",
									"}"
								],
								"id": "5e9dbb2c-be75-486d-ab52-c48ed235f063"
							}
						}
					],
					"id": "85a969b2-0e79-4017-88cc-f2142f2c0b66",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{PublicApiUrl}}/testroute"
					},
					"response": []
				}
			],
			"id": "523110a5-c205-472f-bd27-ef4e4219ac70"
		}
	]
}